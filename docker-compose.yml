x-app: &app
  build: .
  working_dir: /app
  env_file:
    - secrets/.env
  environment:
    - PYTHONUNBUFFERED=1
  volumes:
    - ./:/app
    - ./data:/app/data
    - ./reports:/app/reports

services:
  # P1 – 5m default
  ingest_5m:
    <<: *app
    command: [
      "python", "ingest_cg_5m.py",
      "--symbol", "BTCUSDT",
      "--tf", "5m",
      "--days", "80",
      "--slice-days", "7",
      "--out", "data/parquet/5m/BTCUSDT"
    ]
  qa_5m:
    <<: *app
    command: [
      "python", "qa_p1_5m.py",
      "--glob", "data/parquet/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--out", "reports/p1_qa_core_5m_80d.json",
      "--days", "80"
    ]
  duckdb_view_5m:
    <<: *app
    command: [
      "python", "duckview.py", "create",
      "--db", "meta/duckdb/p1.duckdb",
      "--glob", "data/parquet/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--view", "bars_5m"
    ]

  ingest:
    <<: *app
    command: [
      "python", "ingest_cg.py", "ingest", "coinglass",
      "--conf", "conf/p1_inputs_cg.yaml"
    ]
  ingest_debug:
    <<: *app
    environment:
      - DEBUG=1
    command: [
      "python", "ingest_cg.py", "ingest", "coinglass",
      "--conf", "conf/p1_inputs_cg.yaml", "--debug"
    ]

  qa:
    <<: *app
    command: [
      "python", "qa_p1.py", "qa",
      "--glob", "data/parquet/15m/BTCUSDT/**/*.parquet",
      "--out", "reports/p1_qa_core.json",
      "--conf", "conf/p1_inputs_cg.yaml"
    ]

  duckdb_view:
    <<: *app
    command: [
      "python", "qa_p1.py", "duckdb-view",
      "--glob", "data/parquet/15m/BTCUSDT/**/*.parquet",
      "--view", "bars_15m",
      "--db", "meta/duckdb/p1.duckdb"
    ]

  # P2 – 5m feature builder
  features_build:
    <<: *app
    command: [
      "python", "features_p2.py", "build",
      "--glob", "data/parquet/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--out", "data/features/5m/BTCUSDT",
      "--warmup", "8640", "--winsor_low", "0.01", "--winsor_high", "0.99"
    ]
  features_validate:
    <<: *app
    command: [
      "python", "features_p2.py", "validate",
      "--glob", "data/features/5m/BTCUSDT/**/*.parquet",
      "--qa", "reports/p2_qa_5m_80d.json",
      "--schema", "reports/p2_feature_schema.json",
      "--horizon_days", "80",
      "--warmup", "8640"
    ]
  features_bench:
    <<: *app
    command: [
      "python", "features_p2.py", "bench",
      "--glob", "data/features/5m/BTCUSDT/**/*.parquet",
      "--report", "reports/p2_bench_5m_80d.csv"
    ]
  p2_check:
    <<: *app
    command: [
      "python", "p2_check.py", "run",
      "--features", "data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--raw", "data/parquet/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--bench-csv", "reports/p2_bench_5m_80d.csv",
      "--out-json", "reports/p2_check_5m_80d.json"
    ]
  duck_view_feat:
    <<: *app
    command: [
      "python", "duck_view.py", "create-view",
      "--glob", "data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--view", "feat_5m",
      "--db", "meta/duckdb/p1.duckdb"
    ]

  # P3 – Triple-Barrier labels (5m)
  labels_build:
    <<: *app
    command: [
      "python", "label_p3.py", "triple-barrier",
      "--features", "data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--raw", "data/parquet/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--out", "data/labels/5m/BTCUSDT",
      "--tf", "5m", "--k", "1.2", "--H", "36"
    ]
  labels_validate:
    <<: *app
    command: [
      "python", "label_p3.py", "validate",
      "--labels", "data/labels/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--features", "data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--report", "reports/p3_qa_5m_80d.json"
    ]
  p3_validate:
    <<: *app
    command: [
      "python", "label_validate.py", "run",
      "--labels", "data/labels/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--features", "data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--k", "1.2", "--H", "36", "--atr-window", "14", "--days", "80",
      "--out-json", "reports/p3_validate_5m_80d.json",
      "--raw", "data/parquet/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet"
    ]

  # P4 – Sampling (IF gate + SMOTE)
  p4_iforest:
    <<: *app
    command: [
      "python", "cli_p4.py", "iforest-train",
      "--features", "data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--labels", "data/labels/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--out", "data/masks/ifgate_5m.parquet",
      "--q", "0.995", "--rolling-days", "30", "--seed", "42", "--folds", "5"
    ]
  p4_smote:
    <<: *app
    command: [
      "python", "cli_p4.py", "smote-windows",
      "--features", "data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--labels", "data/labels/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet",
      "--mask", "data/masks/ifgate_5m.parquet",
      "--W", "144",
      "--out", "data/aug/train_smote",
      "--seed", "42", "--folds", "5"
    ]
  p4_classmix:
    <<: *app
    command: [
      "python", "cli_p4.py", "report-classmix",
      "--pre", "data/train",
      "--post", "data/aug/train_smote",
      "--out", "reports/p4_classmix.json"
    ]
  p4_pipeline:
    <<: *app
    command: ["bash", "-lc", \
      "python cli_p4.py iforest-train --features 'data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet' --labels 'data/labels/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet' --out data/masks/ifgate_5m.parquet --q 0.995 --rolling-days 30 --seed 42 --folds 5 && "
      "python cli_p4.py smote-windows --features 'data/features/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet' --labels 'data/labels/5m/BTCUSDT/y=*/m=*/d=*/part-*.parquet' --mask data/masks/ifgate_5m.parquet --W 144 --out data/aug/train_smote --seed 42 --folds 5 && "
      "python cli_p4.py report-classmix --pre data/train --post data/aug/train_smote --out reports/p4_classmix.json"
    ]

  # P6 – Calibration, Ensemble, Threshold Tuning
  p6_calibrate:
    <<: *app
    command: [
      "python", "cli_p5.py", "calibrate",
      "--probs", "artifacts/p5_oos_probs/*.parquet",
      "--method", "temperature",
      "--out", "models/calib.json"
    ]
  p6_ensemble:
    <<: *app
    command: [
      "python", "cli_p5.py", "ensemble",
      "--calib", "models/calib.json",
      "--probs", "artifacts/p5_oos_probs/*.parquet",
      "--weight-by", "EV",
      "--out", "models/ensemble_5m.json",
      "--cost_bps", "5"
    ]
  p6_tune_threshold:
    <<: *app
    command: [
      "python", "cli_p5.py", "tune-threshold",
      "--ensemble", "models/ensemble_5m.json",
      "--probs", "artifacts/p5_oos_probs/*.parquet",
      "--grid", "0.50:0.80:0.025",
      "--cost", "bps:5",
      "--out", "reports/p6_oos_summary.json"
    ]

  # P7 – EV gating policy
  p7_decide:
    <<: *app
    command: [
      "python", "policy_p7.py", "decide",
      "--probs", "artifacts/p6_calibrated.parquet",
      "--atr", "data/atr_5m.parquet",
      "--k-range-min", "1.0",
      "--k-range-max", "1.5",
      "--H", "36",
      "--out", "decisions"
    ]

  # P8 – ONNX FP16 export + parity check
  p8_export:
    <<: *app
    command: [
      "python", "export_p8.py", "onnx",
      "--ckpt", "models/gru_5m/*/best.pt",
      "--fp16",
      "--out", "export/model_5m_fp16.onnx",
      "--preproc", "conf/preproc_5m.yaml",
      "--calib", "models/ensemble_5m.json",
      "--window", "144",
      "--sample", "16"
    ]
